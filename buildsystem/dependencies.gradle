ext {
    // Android Core
    androidCompileSdkVersion = 29
    androidBuildToolsVersion = "29.0.3"
    androidMinSdkVersion = 23
    androidTargetSdkVersion = 29
    androidVersionCode = 1
    androidVersionName = "1.0"
    androidApplicationId = "com.teguh.movies"

    // Android Libraries
    androidxVersion = '1.1.0'
    constraintLayoutVersion = '1.1.3'
    recyclerViewVersion='1.1.0'
    googleServiceverision ='17.0.0'

    //Jetpack
    lifecycleExtensionsVersion = '2.2.0'
    lifecycleViewModelVersion = '2.2.0'
    navigationFragmentVersion = '2.3.0'
    navigationUiVersion = '2.3.0'
    pagingVersion = '1.0.0-alpha5'

    // Network Libraries
    retrofitVersion = '2.8.1'
    gsonVersion = '2.8.5'
    okhttpVersion = '3.12.10'

    // DI Libraries
    daggerVersion = '2.26'
    javaxVersion = '1'

    // ReactiveX Libraries
    rxJavaVersion = '2.2.10'
    rxAndroidVersion = '2.1.1'

    // Testing Libraries
    jUnitVersion = '4.12'
    mockitoVersion = '3.0.0'

    // Other Libraries
    timberVersion = '4.7.1'
    glideVersion ='4.10.0'
    materialVersion = '1.1.0'
    shimmerVersion = '0.5.0'
    eventBusVersion = '3.2.0'

    // Permission Libraries
    karumiVersion = '6.2.0'

    //Database
    roomVersion = "2.2.5"

    //Response Size
    sdpVersion = '1.0.6'
    sspVersion = '1.0.6'

    def androidLibs = [
            androidCore:        [group: 'androidx.core', name: 'core-ktx', version: androidxVersion],
            appCompat:          [group: 'androidx.appcompat', name: 'appcompat', version: androidxVersion],
            constraintLayout:   [group: 'androidx.constraintlayout', name: 'constraintlayout', version: constraintLayoutVersion],
            recyclerview:       [group: 'androidx.recyclerview', name: 'recyclerview', version: recyclerViewVersion],
            googleservice:      [group: 'com.google.android.gms', name: 'play-services-maps', version: googleServiceverision]
    ]

    def jetpackLibs = [
            lifecycleExtention: [group: 'androidx.lifecycle', name: 'lifecycle-extensions', version: lifecycleExtensionsVersion],
            lifecycleViewModel: [group: 'androidx.lifecycle', name: 'lifecycle-viewmodel-ktx', version: lifecycleViewModelVersion],
            navigationFragment: [group: 'androidx.navigation', name: 'navigation-fragment-ktx', version: navigationFragmentVersion],
            navigationUi:       [group: 'androidx.navigation', name: 'navigation-ui-ktx', version: navigationUiVersion],
            paging:             [group: 'android.arch.paging', name: 'runtime', version: pagingVersion]
    ]

    def networkLibs = [
            gson             : [group: 'com.google.code.gson', name: 'gson', version: gsonVersion],
            retrofit         : [group: 'com.squareup.retrofit2', name: 'retrofit', version: retrofitVersion],
            retrofitAdapter  : [group: 'com.squareup.retrofit2', name: 'adapter-rxjava2', version: retrofitVersion],
            retrofitConverter: [group: 'com.squareup.retrofit2', name: 'converter-gson', version: retrofitVersion],
            okhttp           : [group: 'com.squareup.okhttp3', name: 'logging-interceptor', version: okhttpVersion]
    ]

    def dependencyInjectionLibs = [
            daggerCore:         [group: 'com.google.dagger', name: 'dagger', version: daggerVersion],
            daggerAndroid:      [group: 'com.google.dagger', name: 'dagger-android', version: daggerVersion],
            daggerCompiler:     [group: 'com.google.dagger', name: 'dagger-compiler', version: daggerVersion],
            daggerProcessor:    [group: 'com.google.dagger', name: 'dagger-android-processor', version: daggerVersion],
            daggerSupport:      [group: 'com.google.dagger', name: 'dagger-android-support', version: daggerVersion],
            javax:              [group: 'javax.inject', name: 'javax.inject', version: javaxVersion]
    ]

    def loggingLibs = [
            timber:             [group: 'com.jakewharton.timber', name: 'timber', version: timberVersion]
    ]

    def reactiveXLibs = [
            rxJava:             [group: 'io.reactivex.rxjava2', name: 'rxjava', version: rxJavaVersion],
            rxAndroid:          [group: 'io.reactivex.rxjava2', name: 'rxandroid', version: rxAndroidVersion]
    ]

    def testLibs = [
            junit:              [group: 'junit', name: 'junit', version: jUnitVersion],
            mockito:            [group: 'org.mockito', name: 'mockito-core', version: mockitoVersion]
    ]

    def database = [
            roomRuntime:        [group: 'androidx.room', name: 'room-runtime', version: roomVersion],
            roomCompiler:       [group: 'androidx.room', name: 'room-compiler', version: roomVersion],
            roomRxjava:        [group: 'androidx.room', name: 'room-rxjava2', version: roomVersion]
    ]

    def helperLibs =[
            glide:              [group: 'com.github.bumptech.glide', name: 'glide', version: glideVersion],
            material:           [group: 'com.google.android.material', name: 'material', version: materialVersion ],
            shimmer:            [group: 'com.facebook.shimmer', name: 'shimmer', version: shimmerVersion],
            eventbus:           [group: 'org.greenrobot', name: 'eventbus', version: eventBusVersion],
            sdp:                [group: 'com.intuit.sdp', name: 'sdp-android', version: sdpVersion],
            ssp:                [group: 'com.intuit.ssp', name: 'ssp-android', version: sspVersion],
            karumi:             [group: 'com.karumi', name: 'dexter', version: karumiVersion]

    ]

    appDependencies = [
            [configuration: "implementation", dependency: androidLibs.androidCore],
            [configuration: "implementation", dependency: androidLibs.appCompat],
            [configuration: "implementation", dependency: androidLibs.constraintLayout],
            [configuration: "implementation", dependency: androidLibs.recyclerview],
            [configuration: "implementation", dependency: androidLibs.googleservice],
            [configuration: "implementation", dependency: dependencyInjectionLibs.daggerCore],
            [configuration: "implementation", dependency: dependencyInjectionLibs.daggerAndroid],
            [configuration: "implementation", dependency: dependencyInjectionLibs.daggerSupport],
            [configuration: "implementation", dependency: dependencyInjectionLibs.javax],
            [configuration: "kapt", dependency: dependencyInjectionLibs.daggerCompiler],
            [configuration: "kapt", dependency: dependencyInjectionLibs.daggerProcessor],
            [configuration: "implementation", dependency: reactiveXLibs.rxJava],
            [configuration: "implementation", dependency: reactiveXLibs.rxAndroid],
            [configuration: "implementation", dependency: helperLibs.glide],
            [configuration: "implementation", dependency: helperLibs.material],
            [configuration: "implementation", dependency: helperLibs.shimmer],
            [configuration: "implementation", dependency: helperLibs.eventbus],
            [configuration: "implementation", dependency: helperLibs.sdp],
            [configuration: "implementation", dependency: helperLibs.ssp],
            [configuration: "implementation", dependency: jetpackLibs.lifecycleExtention],
            [configuration: "implementation", dependency: jetpackLibs.lifecycleViewModel],
            [configuration: "implementation", dependency: jetpackLibs.navigationFragment],
            [configuration: "implementation", dependency: jetpackLibs.navigationUi],
            [configuration: "implementation", dependency: jetpackLibs.paging],
            [configuration: "testImplementation", dependency: testLibs.junit],
            [configuration: "testImplementation", dependency: testLibs.mockito]
    ]

    dataDependencies = [
            [configuration: "implementation", dependency: dependencyInjectionLibs.daggerCore],
            [configuration: "implementation", dependency: dependencyInjectionLibs.daggerAndroid],
            [configuration: "implementation", dependency: dependencyInjectionLibs.daggerSupport],
            [configuration: "implementation", dependency: dependencyInjectionLibs.javax],
            [configuration: "kapt", dependency: dependencyInjectionLibs.daggerCompiler],
            [configuration: "kapt", dependency: dependencyInjectionLibs.daggerProcessor],
            [configuration: "api", dependency: networkLibs.retrofit],
            [configuration: "api", dependency: networkLibs.retrofitAdapter],
            [configuration: "api", dependency: networkLibs.retrofitConverter],
            [configuration: "api", dependency: networkLibs.okhttp],
            [configuration: "implementation", dependency: dependencyInjectionLibs.javax],
            [configuration: "implementation", dependency: reactiveXLibs.rxJava],
            [configuration: "testImplementation", dependency: testLibs.junit],
            [configuration: "testImplementation", dependency: testLibs.mockito],
            [configuration: "api", dependency: database.roomRuntime],
            [configuration: "kapt", dependency: database.roomCompiler],
            [configuration: "implementation", dependency: database.roomRxjava]
    ]

    domainDependencies = [
            [configuration: "implementation", dependency: dependencyInjectionLibs.daggerCore],
            [configuration: "implementation", dependency: dependencyInjectionLibs.javax],
            [configuration: "kapt", dependency: dependencyInjectionLibs.daggerCompiler],
            [configuration: "implementation", dependency: reactiveXLibs.rxJava],
            [configuration: "implementation", dependency: reactiveXLibs.rxAndroid],
            [configuration: "testImplementation", dependency: testLibs.junit],
            [configuration: "testImplementation", dependency: testLibs.mockito]
    ]
}